from pathlib import Path
from malwaredoc.extract.pipeline import FeatureExtractionPipeline

from malwaredoc.util.filesystem import (
    get_all_files_in_dir_and_subdirs,
    write_model_to_file,
)

from malwaredoc.util.limits import time_limit


def main():
    folder_path = Path("./data/files/").resolve()
    results_path = Path("./data/results").resolve()

    files = get_all_files_in_dir_and_subdirs(folder_path)
    pipeline = FeatureExtractionPipeline()
    failed = []
    reason = None

    for path in files:
        try:
            print("Parsing...")
            reason = "parsing"
            with time_limit(10):
                analysis = pipeline.process_file(path)
            print("Dumping...")
            reason = "dumping"
            write_model_to_file(analysis, f"{str(results_path / path.name)}.json")
            print("Done!")

        except Exception:
            print("Failed :(")
            failed.append((path, reason))

    for failure in failed:
        print(f"File: {str(failure[0])}")
        print(f"Reason: {failure[1]}")
        print()


if __name__ == "__main__":
    main()
