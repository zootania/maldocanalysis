from pathlib import Path
from typing import List

import tomli

from malwaredoc.data.base import Base
import os

BASE_SOURCE_PATH = os.path.dirname(os.path.abspath(__file__))
BIN_PATH = os.path.join(BASE_SOURCE_PATH, r"extract/bin")
WIN_7Z_PATH = os.path.join(BIN_PATH, r"amd64/7z.exe")
class AdditionalFeatureConfig(Base):
    # columns contain strings that should be analyzed.
    string_analyzer_columns: List[str]
    # columns that should be converted to integer from byte strings
    byte_columns: List[str]
    convert_to_numerical_columns: List[str]


class PreprocessingConfig(Base):
    # categorical, numerical or boolean features that should be pre-processed
    input_features: List[str]
    style_embedding_columns: List[str]
    embedding_columns: List[str]
    code_analysis_columns: List[str]
    ner_columns: List[str]
    translation_columns: List[str]


class Config(Base):
    """Config class for feature preprocessing."""

    columns: List[str]
    additional_features: AdditionalFeatureConfig
    preprocessing: PreprocessingConfig


def load_config(path: Path) -> Config:
    """
    Load config from file.
    Args:
        path: path to file.

    Returns:
        Config
    """
    with open(str(path.resolve()), "rb") as config_file:
        config = Config(**tomli.load(config_file))
    return config
