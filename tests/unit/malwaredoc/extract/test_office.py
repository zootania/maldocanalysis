from pathlib import Path
from typing import Tuple

import pytest


from malwaredoc.extract.office.common import VBAData, VBAMacro, get_vba_code, get_text_content


@pytest.mark.parametrize(
    "test_data",
    [
        (Path("tests/resources/word/text.docx"), VBAData(has_macro=False, macros=[])),
        (
            Path("tests/resources/word/text_base64.docx"),
            VBAData(has_macro=False, macros=[]),
        ),
        (
            Path("tests/resources/word/text_image.docx"),
            VBAData(has_macro=False, macros=[]),
        ),
        (
            Path("tests/resources/word/text_ip.docx"),
            VBAData(has_macro=False, macros=[]),
        ),
        (
            Path("tests/resources/word/text_link.docx"),
            VBAData(has_macro=False, macros=[]),
        ),
        (
            Path("tests/resources/word/vba.docm"),
            VBAData(
                has_macro=True,
                macros=[
                    VBAMacro(
                        filename="ThisDocument.cls",
                        stream_path="VBA/ThisDocument",
                        vba_code='Attribute VB_Name = "ThisDocument"\r\nAttribute VB_Base = "1Normal.ThisDocument"\r\nAttribute VB_GlobalNameSpace = False\r\nAttribute VB_Creatable = False\r\nAttribute VB_PredeclaredId = True\r\nAttribute VB_Exposed = True\r\nAttribute VB_TemplateDerived = True\r\nAttribute VB_Customizable = True\r\nPrivate Function EncodeBase64(ByVal strData As String) As Byte()\r\n    Dim objXML2 As MSXML2.DOMDocument\r\n    Dim objNode As MSXML2.IXMLDOMElement\r\n    Dim arrData() As Byte\r\n    arrData = StrConv(strData, vbFromUnicode)\r\n    \'-------------------------------\r\n    Set objXML2 = New MSXML2.DOMDocument\r\n    Set objNode = objXML2.createElement("b64")\r\n    \'-------------------------------\r\n    objNode.DataType = "bin.base64"\r\n    objNode.nodeTypedValue = arrData\r\n    \'-------------------------------\r\n    EncodeBase64 = objNode.Text\r\n    \'-------------------------------\r\n    Set objNode = Nothing\r\n    Set objXML2 = Nothing\r\nEnd Function\r\nPrivate Function DecodeBase64(ByVal strData As String) As Byte()\r\n    Dim objXML2 As MSXML2.DOMDocument\r\n    Dim objNode As MSXML2.IXMLDOMElement\r\n    \'-------------------------------\r\n    Set objXML2 = New MSXML2.DOMDocument\r\n    Set objNode = objXML2.createElement("b64")\r\n    \'-------------------------------\r\n    objNode.DataType = "bin.base64"\r\n    objNode.Text = strData\r\n    \'-------------------------------\r\n    DecodeBase64 = StrConv(objNode.nodeTypedValue, vbUnicode)\r\n    \'-------------------------------\r\n    Set objNode = Nothing\r\n    Set objXML2 = Nothing\r\nEnd Function\r\nSub PingRandomIPAddress()\r\n    Dim ipAddress As String\r\n    Dim command As String\r\n    Dim shell As Object\r\n    \r\n    \' Generate random IP address\r\n    ipAddress = GenerateRandomIPAddress()\r\n    \r\n    \' Construct the ping command\r\n    command = "ping -n 4 " & ipAddress  \' Change the "4" to adjust the number of ping requests\r\n    \r\n    \' Create a shell object to execute the command\r\n    Set shell = CreateObject("WScript.Shell")\r\n    \r\n    \' Execute the ping command\r\n    shell.Run "cmd /c " & command, 0, True\r\n    \r\n    \' Clean up\r\n    Set shell = Nothing\r\nEnd Sub\r\n\r\nFunction GenerateRandomIPAddress() As String\r\n    Dim ipAddress As String\r\n    \r\n    \' Generate random IP address components\r\n    Dim octet1 As Integer\r\n    Dim octet2 As Integer\r\n    Dim octet3 As Integer\r\n    Dim octet4 As Integer\r\n    \r\n    Randomize  \' Initialize random number generator\r\n    \r\n    \' Generate random values for each octet (between 0 and 255)\r\n    octet1 = Int((256 * Rnd))\r\n    octet2 = Int((256 * Rnd))\r\n    octet3 = Int((256 * Rnd))\r\n    octet4 = Int((256 * Rnd))\r\n    \r\n    \' Construct the IP address\r\n    ipAddress = octet1 & "." & octet2 & "." & octet3 & "." & octet4\r\n    \r\n    \' Return the generated IP address\r\n    GenerateRandomIPAddress = ipAddress\r\nEnd Function\r\n',
                    )
                ],
            ),
        ),
    ],
)
def test_get_vba_code(test_data: Tuple[Path, VBAData]):
    file, data = test_data
    assert get_vba_code(file) == data


@pytest.mark.parametrize(
    "test_data",
    [
        (
            Path("tests/resources/word/text.docx"),
            "Title: Important Security Notice: Protecting Your Digital Assets\n\nDear [Recipient's Name],\n\nSubject: Urgent Security Update Regarding Recent Cyber Threats\n\nWe hope this message finds you well. We are writing to inform you about the current cybersecurity landscape and provide some essential guidelines to help safeguard your valuable digital assets from potential threats.\n\nIn recent times, there has been a significant increase in malicious activities targeting individuals and organizations alike. Cybercriminals are continually evolving their techniques, making it crucial for us to remain vigilant and proactive in securing our digital environments.\n\nTo ensure the safety of your personal and professional data, we strongly recommend following these essential security practices:\n\nKeep Your Software Updated: Regularly updating your operating system, antivirus software, web browsers, and other applications is crucial in staying protected against emerging security vulnerabilities. Enable automatic updates whenever possible to ensure you have the latest security patches.\n\nStrengthen Your Passwords: Use strong, unique passwords for all your online accounts. Avoid common phrases, easily guessable combinations, or personal information. Implement two-factor authentication (2FA) wherever available to add an extra layer of security.\n\nBe Cautious of Phishing Attempts: Exercise caution when receiving emails, instant messages, or calls from unknown sources. Do not click on suspicious links, download attachments from unverified senders, or share personal information unless you have verified the legitimacy of the communication.\n\nEmploy Robust Antivirus and Firewall Solutions: Install reliable antivirus software and maintain an active firewall to detect and prevent malware infections. Regularly scan your system for potential threats and ensure real-time protection is enabled.\n\nBackup Your Data Regularly: Create regular backups of your critical data and store them in secure offline or cloud-based locations. In the event of a security incident, having backups ensures that you can recover your data without paying ransomware demands or enduring data loss.\n\nStay Informed and Educated: Keep yourself updated on the latest security trends, threats, and best practices. Be wary of social engineering tactics, such as fake websites, misleading advertisements, or deceptive downloads.\n\nSecure Your Home Network: If you have a home Wi-Fi network, change the default administrator password, enable encryption (WPA2 or higher), and restrict unauthorized access by using a strong network password.\n\nRemember, the security of your digital assets is a shared responsibility. By implementing these precautionary measures, you significantly reduce the risk of falling victim to cyberattacks.\n\nIn case you encounter any suspicious activity or have security-related concerns, please don't hesitate to contact our IT support team at [contact details]. Our dedicated experts are here to assist you in maintaining a secure digital environment.\n\nThank you for your attention to this matter. Stay vigilant, and together we can combat cyber threats effectively.\n\nSincerely,\n\n[Your Name] [Your Title/Position] [Your Organization/Company Name]",
        ),
        (
            Path("tests/resources/word/text_base64.docx"),
            "\"Hey,\n\nI hope this message finds you well. I wanted to share some important information with you. Please find the encoded data below:\n\nSGVsbG8gd29ybGQhCg==\n\nThis is a base64 encoded message. To decode it, you can use any online base64 decoding tool or write a simple script to decode it programmatically.\n\nOnce you decode the message, you will find the following text: 'Hello world!'\n\nIf you have any questions or need further clarification, feel free to reach out to me. I'll be happy to assist you.\n\nBest regards, [Your Name]\"",
        ),
        (
            Path("tests/resources/word/text_image.docx"),
            "I wont steal your information ðŸ˜Š",
        ),
        (
            Path("tests/resources/word/text_ip.docx"),
            "Hey there,\n\nI hope this message finds you well. I wanted to let you know that the new website is up and running smoothly. You can access it by typing the following IP address into your browser: 192.168.0.1.\n\nWe've put a lot of effort into making the website user-friendly and informative. Feel free to explore the various sections and provide us with your valuable feedback.\n\nIf you have any questions or encounter any issues while accessing the website, please don't hesitate to reach out to our support team. They can be contacted at support@example.com or by phone at +1-555-123-4567.\n\nThank you for your continued support!\n\nBest regards, [Your Name]",
        ),
        (
            Path("tests/resources/word/text_link.docx"),
            "Hello,\n\nI hope you're doing well. I wanted to share an exciting update with you. We have recently launched a new website with a wealth of information and resources. You can check it out by clicking on the following link: Click here.\n\nOur website is designed to provide you with easy access to the latest news, product updates, and helpful articles. We believe it will be a valuable resource for you and your team.\n\nFeel free to browse through the different sections and explore the features we have implemented. Should you have any feedback or questions, please don't hesitate to reach out to us. You can find our contact information on the website.\n\nThank you for your attention, and we look forward to your visit!\n\nBest regards, [Your Name]",
        ),
    ],
)
def test_get_text_content(test_data: Tuple[Path, str]):
    file, data = test_data
    assert data == get_text_content(file.resolve())
